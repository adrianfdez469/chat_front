{"version":3,"sources":["utils/socket.js","utils/axiosHook.js","components/uiComponents/notification/notification.hook.js","conf/configuration.js","utils/useLogout.js","../node_modules/@material-ui/core/esm/AppBar/AppBar.js","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/icons/Cached.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/DoneAll.js","../node_modules/@material-ui/icons/Telegram.js","view/chat/chatHeader/chatHeader.view.js","view/chat/chatHeader/chatHeader.controller.js","view/chat/chatHeader/index.js","../node_modules/@material-ui/core/esm/colors/lightGreen.js","view/chat/chatBody/chatBody.view.js","view/chat/chatBody/chatBody.controller.js","view/chat/chatBody/index.js","view/chat/chatEditor/chatEditor.view.js","view/chat/chatEditor/chatEditor.controller.js","view/chat/chatEditor/index.js","view/chat/chat.view.js","view/chat/index.js"],"names":["socket","socketClient","getSocket","openSocket","DEFAULT_CONFIG","server","close","text","errConn","es","en","getTokenIdError","useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","idioma","useRecoilValue","idiomaState","firebaseCurrentToken","firebaseCurrentTokenState","logout","useLogout","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","getAxiosRequest","idToken","axios","post","headers","then","resp","catch","err","response","console","log","firebase","auth","currentUser","getIdToken","NotificationHook","useRecoilState","notificationAtom","notificationState","setNotificationState","defaultToOpem","open","autoHideDuration","openSpecificNotification","severity","msg","openNotification","properties","openInfoNotification","openWarningNotification","setLoginData","useSetRecoilState","loginData","setUserAvatar","userAvatarState","setSubscribe","subscribeToEventsState","setContactList","contactListState","setFriends","friendsAtom","client","useCallback","eraseConversationsWithContacts","emit","signOut","AppBar","React","props","ref","classes","className","_props$color","color","_props$position","position","other","_objectWithoutProperties","Paper","_extends","square","component","elevation","clsx","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","gutters","alignItems","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","title","marginLeft","customAppBar","values","sm","avatarMan","blue","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","background","paper","height","borderRadius","animation","border","content","transform","opacity","Badge","OfflineStyledBadge","OnlineBadge","contact","socketId","friendShipStatus","overlap","anchorOrigin","vertical","horizontal","children","memo","closeChat","avatarUrl","avatarGender","gender","IconButton","edge","aria-label","onClick","Avatar","src","Typography","noWrap","nickname","activeChatWith","idContact","setActiveChatWith","friendSelector","find","f","contactId","ChatHeader","lightGreen","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","useMessageStyle","message","padding","maxWidth","marginTop","marginBottom","info","dark","timeMessage","disabled","typography","subtitle2","mymsg","textAlign","alignSelf","notmymsg","msgAvatar","myMsgAvatar","notMyMsgAvatar","doneIcon","fontSize","Message","state","datetime","avatarSrc","userGender","msgStyle","avatarStyle","options","locale","date","formatRelative","Date","stateIcon","style","alt","useChatStyle","chatConversation","overflowY","offset","offsetDown","bottom","ChatBodyView","messages","useEffect","element","document","getElementById","scrollTop","scrollHeight","id","map","elem","idx","arr","key","ChatBodyController","initConversation","initConversationSelector","getConversationWithContact","userData","friends","length","errorLoadConversation","token","status","conversation","data","ChatBody","icon","textarea","fontFamily","maxHeight","cursor","ChatEditorView","sendMessage","refAreaTexto","keyPress","role","contentEditable","onKeyPress","ChatEditorController","useNotification","addMsgToConversation","addMsgToConversationSelector","useRef","useState","consecutive","setConsecutive","current","innerText","replace","messageId","prev","userOriginId","userId","userDestinyId","toSocketId","focus","notEditable","event","charCode","preventDefault","ChatEditor","ChatView","Chat"],"mappings":"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","file":"static/js/10.955e2e70.chunk.js","sourcesContent":["import openSocket from 'socket.io-client'; \r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\nlet socket;\r\n\r\nconst socketClient = \r\n {   \r\n    getSocket: () => {\r\n        if(!socket){\r\n            socket = openSocket(DEFAULT_CONFIG.server);\r\n            return socket;    \r\n        }\r\n        return socket;\r\n    },\r\n    close: () => {\r\n        socket.close();\r\n    }\r\n};\r\n\r\nexport default socketClient;","//import React from 'react';\r\nimport axios from 'axios';\r\nimport {useRecoilValue} from 'recoil';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\nimport {idiomaState, firebaseCurrentTokenState} from '../components/recoil/atoms';\r\nimport firebase from './firebase';\r\nimport useLogout from './useLogout';\r\n\r\nconst text = {\r\n    errConn: {\r\n        es: \"Error de conexión\",\r\n        en: \"Network error\"\r\n    },\r\n    getTokenIdError: {\r\n        es: \"Su sesión ha expirado\",\r\n        en: \"Expired session\"\r\n    }\r\n}\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const firebaseCurrentToken = useRecoilValue(firebaseCurrentTokenState);\r\n    const logout = useLogout();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const getAxiosRequest = idToken => axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n            bodyParams, \r\n            {\r\n                headers: {\r\n                    'Authorization': idToken\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                if(doFnAfterSuccess) doFnAfterSuccess(resp, idToken);\r\n                return resp;\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    openErrorNotification(text.errConn[idioma]);                       \r\n                }else if(messageOnError) openErrorNotification(messageOnError);\r\n\r\n                if(doFnAfterError) doFnAfterError(err);\r\n                return err;\r\n            })\r\n    \r\n\r\n        if(firebaseCurrentToken){\r\n            return getAxiosRequest(firebaseCurrentToken)\r\n                .catch(err => {\r\n                    console.log('Error al realizar la peticion con el token guardado en recoil state, asi que intentamos usando firebase');\r\n                    return firebase.auth().currentUser.getIdToken(true)\r\n                        .then(idToken => {\r\n                            return getAxiosRequest(idToken);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log('Error al realizar la peticion con el token proveniente de firebase');\r\n                            logout();\r\n                            return err;\r\n                        });\r\n                })\r\n        }\r\n    };   \r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import React from 'react';\r\nimport {useRecoilState} from 'recoil'\r\nimport {notificationAtom} from './notification.atom';\r\n\r\n\r\nconst NotificationHook = () => {\r\n    \r\n    const [notificationState, setNotificationState] = useRecoilState(notificationAtom);\r\n\r\n    const defaultToOpem = {\r\n        ...notificationState,\r\n        open: true,\r\n        autoHideDuration: 3000\r\n    };\r\n\r\n    const openNotification = properties => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            ...properties\r\n        });\r\n    }\r\n\r\n    const openSpecificNotification = (severity, msg) => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            severity: severity,\r\n            msg: msg\r\n        });\r\n    }\r\n\r\n    const openSuccessNotification = msg => {\r\n        openSpecificNotification(\"success\",msg);\r\n    }\r\n\r\n    const openWarningNotification = msg => {\r\n        openSpecificNotification(\"warning\",msg);\r\n    }\r\n\r\n    const openErrorNotification = msg => {\r\n        openSpecificNotification(\"error\",msg);\r\n    }\r\n\r\n    const openInfoNotification = msg => {\r\n        openSpecificNotification(\"info\",msg);\r\n    }\r\n\r\n    return {    \r\n        openNotification: openNotification,\r\n        openSuccessNotification: openSuccessNotification,\r\n        openErrorNotification: openErrorNotification,\r\n        openInfoNotification: openInfoNotification,\r\n        openWarningNotification: openWarningNotification\r\n    };\r\n\r\n}\r\nexport default NotificationHook;","const DEV = {\r\n    server: \"http://localhost:3001\"\r\n}\r\nconst PROD = {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    //server: location.origin\r\n    server: \"https://shut-app-pro.herokuapp.com\"\r\n}\r\n\r\nexport const DEFAULT_CONFIG = process.env.NODE_ENV === \"development\" ? DEV : PROD;","import {useSetRecoilState} from 'recoil';\r\nimport {loginData, userAvatarState, subscribeToEventsState, contactListState, friendsAtom, eraseConversationsWithContacts} from '../components/recoil/atoms';\r\nimport { useCallback } from 'react';\r\nimport socketClient from './socket';\r\nimport firebase from './firebase';\r\n\r\nconst useLogout = () => {\r\n\r\n    const setLoginData = useSetRecoilState(loginData);\r\n    const setUserAvatar = useSetRecoilState(userAvatarState);\r\n    const setSubscribe = useSetRecoilState(subscribeToEventsState);\r\n    const setContactList = useSetRecoilState(contactListState);\r\n    const setFriends = useSetRecoilState(friendsAtom);\r\n    const client = socketClient.getSocket();\r\n\r\n    return useCallback(() => {\r\n        eraseConversationsWithContacts();\r\n        setUserAvatar(null);\r\n        setContactList([]);\r\n        setFriends([]);\r\n        client.emit('logout', {});\r\n        socketClient.close();\r\n        setSubscribe(false);\r\n        setLoginData(null);\r\n        firebase.auth().signOut();\r\n        \r\n    }, []);\r\n}\r\nexport default useLogout;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"\n}), 'Cached');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z\"\n}), 'Telegram');\n\nexports.default = _default;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {blue, pink} from '@material-ui/core/colors';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(0.5),\r\n    },\r\n    title: {\r\n        display: 'block',\r\n        //display: 'none',\r\n        /*[theme.breakpoints.up('xs')]: {\r\n          display: 'block',\r\n        },*/\r\n\r\n        marginLeft: theme.spacing(1)\r\n        \r\n    },\r\n    customAppBar: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    avatarMan: {\r\n      color: theme.palette.getContrastText(blue[400]),\r\n      backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n      color: theme.palette.getContrastText(pink[300]),\r\n      backgroundColor: pink[300],\r\n    }\r\n}));\r\n\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n        \r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst ChatHeaderView = ({closeChat, contact}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    //const avatarUrl = contact.avatarUrl ? DEFAULT_CONFIG.server + contact.avatarUrl : null;\r\n    const avatarUrl = contact.avatarUrl ? contact.avatarUrl : null;\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n    \r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.customAppBar}>\r\n            <ToolBar>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={closeChat}\r\n                >\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                    <OnlineBadge contact={contact}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    </OnlineBadge>\r\n                <Typography className={classes.title} variant=\"h5\" noWrap>\r\n                    {contact.nickname}\r\n                </Typography>\r\n                <div className={classes.grow} />\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </ToolBar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default React.memo(ChatHeaderView);","import React from 'react';\r\nimport {useRecoilValue, useRecoilState} from 'recoil';\r\nimport { friendSelector } from '../../../components/recoil/selectors'; \r\nimport { activeChatWith } from '../../../components/recoil/atoms'; \r\nimport ChatHeaderView from './chatHeader.view';\r\n\r\nconst ChatHeaderController = () => {\r\n\r\n    const [idContact, setActiveChatWith] = useRecoilState(activeChatWith);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n    const closeChat = React.useCallback(() => {\r\n        setActiveChatWith(null);\r\n    }, [])\r\n    \r\n    return <ChatHeaderView \r\n        closeChat={closeChat}\r\n        contact={contact}\r\n    />;\r\n\r\n}\r\nexport default React.memo(ChatHeaderController);","import React from 'react';\r\nimport ChatHeaderController from './chatHeader.controller';\r\nconst ChatHeader = props => {\r\n\r\n    return <ChatHeaderController />;\r\n\r\n}\r\nexport default ChatHeader;","var lightGreen = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\nexport default lightGreen;","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { grey, lightGreen, blue, pink } from '@material-ui/core/colors';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport  formatRelative  from 'date-fns/formatRelative'\r\nimport es from 'date-fns/locale/es';\r\n\r\nconst useMessageStyle = makeStyles(theme => ({\r\n    message: {\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n        maxWidth: '60%',\r\n        //margin: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: 0,\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(2)}px`,        \r\n        borderRadius: '10px',\r\n        backgroundColor: theme.palette.info.dark,\r\n        color: theme.palette.info.contrastText,\r\n        position: \"relative\"\r\n    },\r\n    timeMessage: {\r\n        paddingLeft: theme.spacing(2),\r\n        //paddingRight: theme.spacing(2),\r\n        maxWidth: '60%',\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(1)}px`,\r\n        color: theme.palette.text.disabled,\r\n        ...theme.typography.subtitle2\r\n    },\r\n    mymsg: {\r\n        textAlign: 'right',\r\n        alignSelf: 'flex-end',\r\n        borderRadius: '10px 0 10px 10px'\r\n    },\r\n    notmymsg: { \r\n        alignSelf: 'flex-start',\r\n        borderRadius: '0 10px 10px 10px'\r\n    },\r\n    msgAvatar: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        position: \"absolute\",\r\n        top: `-${theme.spacing(1.5)}px`,\r\n    },\r\n    myMsgAvatar : {\r\n        right: `-${theme.spacing(1.5)}px`,\r\n        \r\n    },\r\n    notMyMsgAvatar: {\r\n        left: `-${theme.spacing(1.5)}px`\r\n    },\r\n    doneIcon: {\r\n        marginRight: theme.spacing(1),\r\n        fontSize: theme.spacing(2.2)\r\n    },\r\n    avatarMan: {\r\n        color: theme.palette.getContrastText(blue[400]),\r\n        backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n        color: theme.palette.getContrastText(pink[300]),\r\n        backgroundColor: pink[300],\r\n    }\r\n}));\r\n\r\nconst Message = React.memo(\r\n    ({state, content, datetime ,contact, avatarSrc, userGender, idioma}) => {\r\n\r\n    const classes = useMessageStyle();\r\n\r\n    const msgStyle = state > 0 ? classes.mymsg : classes.notmymsg;\r\n    const avatarStyle = state > 0 ? classes.myMsgAvatar : classes.notMyMsgAvatar;\r\n    //const avatarUrl = state > 0 ? avatarSrc : DEFAULT_CONFIG.server + contact.avatarUrl;\r\n    const avatarUrl = state > 0 ? avatarSrc : contact.avatarUrl;\r\n\r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const date = formatRelative(new Date(datetime), new Date(), options)\r\n    \r\n    let stateIcon = null;\r\n    if(state === 1) stateIcon = <CachedIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 2) stateIcon = <DoneIcon className={classes.doneIcon} style={{ color: lightGreen[500] }}/>\r\n    //if(state === 2) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 3) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: lightGreen[500] }}/>\r\n    \r\n    let avatarGender;\r\n    if( state === 0 ){\r\n        avatarGender = contact.gender === \"M\" ? 'avatarMan' : contact.gender === \"F\" ? \"avatarWoman\" : \"\";\r\n    }else{\r\n        avatarGender = userGender === \"M\" ? 'avatarMan' : userGender === \"F\" ? \"avatarWoman\" : \"\";\r\n    }  \r\n    \r\n\r\n    return (<>\r\n        <div className={`${classes.message} ${msgStyle}`}>\r\n            <Avatar\r\n                alt={contact.nickname}\r\n                src={avatarUrl}\r\n                variant=\"circle\"\r\n                className={`${classes.msgAvatar} ${avatarStyle} ${classes[avatarGender]}`}                \r\n            />\r\n            {content}\r\n        </div>\r\n        <span className={` ${msgStyle}`}>\r\n            <span className={`${classes.timeMessage}`}>\r\n                {date}\r\n            </span>\r\n            {stateIcon}\r\n        </span>\r\n        \r\n    </>\r\n    );\r\n});\r\n\r\nconst useChatStyle = makeStyles(theme => ({\r\n    chatConversation: {\r\n        position: 'relative',\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        height: '100%'\r\n        \r\n    },\r\n    offset: theme.mixins.toolbar,\r\n    offsetDown: {\r\n        ...theme.mixins.toolbar, \r\n        bottom: 0,\r\n        position: 'relative'\r\n    }\r\n}));\r\n\r\nconst ChatBodyView = ({contact, avatarSrc, messages, idioma, userGender}) => {\r\n\r\n    React.useEffect(() => {\r\n        var element = document.getElementById('chatConversation');\r\n        if(element)\r\n            element.scrollTop = element.scrollHeight;\r\n    });\r\n\r\n    const classes = useChatStyle();\r\n    return (\r\n        \r\n                <div id=\"chatConversation\" className={classes.chatConversation}>\r\n                    <div className={classes.offset} />\r\n                    {\r\n                        messages.map((elem, idx, arr) => {\r\n                            return <Message {...elem} key={idx} contact={contact} avatarSrc={avatarSrc} userGender={userGender} idioma={idioma}/>\r\n                        })\r\n                    }\r\n                    <div className={classes.offsetDown} />\r\n                </div>\r\n\r\n    );\r\n\r\n}\r\nexport default ChatBodyView;","import React, { useEffect } from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport { friendSelector, initConversationSelector } from '../../../components/recoil/selectors'; \r\nimport {userAvatarState, activeChatWith, idiomaState, loginData, getConversationWithContact} from '../../../components/recoil/atoms';\r\nimport ChatBodyView from './chatBody.view';\r\nimport useAxiosHook from '../../../utils/axiosHook';\r\nimport text from './idioma.json';\r\n\r\nconst ChatBodyController = () => {\r\n    \r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const initConversation = useSetRecoilState(initConversationSelector);\r\n    const messages = useRecoilValue(getConversationWithContact(idContact));\r\n    const avatarSrc = useRecoilValue(userAvatarState);\r\n    const userData = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    \r\n    const friends = useRecoilValue(friendSelector);\r\n    const {postRequest} = useAxiosHook();\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n\r\n    const loadConversation = () => {\r\n        if(messages.length === 0){\r\n            postRequest({\r\n                url: '/messages/getMessagesByContact',\r\n                messageOnError: text.errorLoadConversation[idioma],\r\n                bodyParams: {contactId: contact.contactId},\r\n                doFnAfterSuccess: (resp, token) => {\r\n                    if(resp.status === 200){\r\n                        \r\n                        initConversation({\r\n                            contactId: contact.contactId,\r\n                            conversation: resp.data.conversation\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadConversation();\r\n    }, []);\r\n\r\n    if(messages){\r\n        return <ChatBodyView \r\n                    contact={contact}\r\n                    avatarSrc={avatarSrc}\r\n                    userGender={userData.gender}\r\n                    messages={messages}\r\n                    idioma={idioma}\r\n                /> ;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ChatBodyController;","import React from 'react';\r\nimport ChatBodyController from './chatBody.controller';\r\nconst ChatBody = props => {\r\n\r\n    return <ChatBodyController />;\r\n\r\n}\r\nexport default ChatBody;","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, makeStyles} from '@material-ui/core';\r\n\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar:{\r\n        top: 'auto',\r\n        bottom: 0,\r\n        position: \"fixed\",\r\n        width: '100%',        \r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    toolbar: {\r\n        padding: 0\r\n    },\r\n    icon: {\r\n        fontSize: theme.spacing(3.75)\r\n    },\r\n    textarea: {\r\n        border: '1px solid white',\r\n        fontFamily: 'inherit',\r\n        fontSize: 'large',    \r\n        padding: '1px 6px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        //color: 'rgba(0,0,0,0.7)',\r\n        color: theme.palette.text.primary,\r\n        \r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom:  theme.spacing(1),\r\n        maxHeight: theme.spacing(10),\r\n        minHeight: theme.spacing(4),\r\n        overflowY: 'auto',\r\n        borderRadius: theme.spacing(0.5),\r\n        marginLeft: theme.spacing(2),\r\n        cursor: 'text'\r\n    }\r\n}));\r\n\r\n\r\nconst ChatEditorView = ({sendMessage, refAreaTexto, keyPress, }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar color=\"primary\"  className={classes.appBar}>\r\n            <Toolbar variant=\"dense\" className={classes.toolbar}>\r\n                <div className={classes.textarea}  role=\"textbox\" contentEditable ref={refAreaTexto} onKeyPress={keyPress}></div>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\" onClick={sendMessage}>\r\n                    <TelegramIcon className={classes.icon}/>\r\n                </IconButton>                \r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default ChatEditorView;","import React, {useRef, useEffect, useState} from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport {loginData, activeChatWith, idiomaState, firebaseCurrentTokenState} from '../../../components/recoil/atoms';\r\nimport {friendSelector, addMsgToConversationSelector} from '../../../components/recoil/selectors';\r\nimport useNotification from '../../../components/uiComponents/notification/notification.hook';\r\nimport ChatEditorView from './chatEditor.view';\r\nimport socketClient from '../../../utils/socket';\r\nimport text from './idioma.json';\r\n\r\n\r\nconst ChatEditorController = props => {\r\n\r\n    const {openWarningNotification} = useNotification();\r\n    const userData = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const addMsgToConversation = useSetRecoilState(addMsgToConversationSelector);\r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const firebaseCurrentToken = useRecoilValue(firebaseCurrentTokenState);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n    const refAreaTexto = useRef('');\r\n    const [consecutive, setConsecutive] = useState(0);\r\n\r\n\r\n    const sendMessage = () => {\r\n\r\n        const oldtext = refAreaTexto.current.innerText;\r\n        const text = oldtext.replace(/^(\\s*\\r*)(.)(\\s*\\r*)$/, '$2');\r\n        if(text !== ''){\r\n            addMsgToConversation({\r\n                contactId: contact.contactId,\r\n                messageId: consecutive,//messageId,\r\n                content: refAreaTexto.current.innerText,\r\n                datetime: new Date(),\r\n                state: 1\r\n            });\r\n            setConsecutive(prev => prev + 1);\r\n\r\n            const client = socketClient.getSocket();\r\n            client.emit('send message', {\r\n                content: refAreaTexto.current.innerText,\r\n                userOriginId: userData.userId,\r\n                userDestinyId: idContact,\r\n                toSocketId: contact.socketId,\r\n                token: firebaseCurrentToken,\r\n                consecutive: consecutive\r\n            });\r\n\r\n            refAreaTexto.current.innerText = '';\r\n            refAreaTexto.current.focus();\r\n        }\r\n    }\r\n\r\n    const keyPress = (event) => {\r\n        \r\n        if(event.charCode === 13){\r\n            event.preventDefault();\r\n            sendMessage();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        contact.friendShipStatus !== 5 ? refAreaTexto.current.focus() : openWarningNotification(text.notEditable[idioma]);\r\n    }, []);\r\n\r\n    return contact.friendShipStatus !== 5 ? <ChatEditorView \r\n        sendMessage={sendMessage}\r\n        keyPress={keyPress}\r\n        refAreaTexto={refAreaTexto}\r\n    /> : null;\r\n\r\n}\r\nexport default ChatEditorController;","import React from 'react';\r\n\r\nimport ChatEditorController from './chatEditor.controller';\r\nconst ChatEditor = props => {\r\n\r\n    return <ChatEditorController />;\r\n\r\n}\r\nexport default ChatEditor;","import React from 'react';\r\n\r\n\r\n\r\nimport ChatHeader from './chatHeader';\r\nimport ChatBody from './chatBody';\r\nimport ChatEditor from './chatEditor';\r\n\r\nconst ChatView = () => {\r\n\r\n    return (\r\n        <>\r\n            <ChatHeader />\r\n            <ChatBody />\r\n            <ChatEditor />\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ChatView;","import React from 'react';\r\nimport ChatView from './chat.view';\r\n\r\nconst Chat = props => {\r\n\r\n    return <ChatView />;\r\n}\r\nexport default Chat;"],"sourceRoot":""}