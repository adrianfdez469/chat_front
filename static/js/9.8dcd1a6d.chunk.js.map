{"version":3,"sources":["utils/socket.js","utils/axiosHook.js","components/uiComponents/notification/notification.hook.js","conf/configuration.js","utils/useLogout.js","utils/OS_NotificationPermission.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/icons/HowToReg.js","../node_modules/@material-ui/icons/ThumbDownAlt.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/VoiceOverOff.js","../node_modules/@material-ui/icons/Info.js","view/contacts/contact/acceptInvAction/acceptinv.view.js","view/contacts/contact/acceptInvAction/acceptInv.controller.js","view/contacts/contact/acceptInvAction/index.js","view/contacts/contact/declineInvAction/declineinv.view.js","view/contacts/contact/declineInvAction/declineInv.controller.js","view/contacts/contact/declineInvAction/index.js","view/contacts/contact/deleteAction/delete.view.js","view/contacts/contact/deleteAction/delete.controller.js","view/contacts/contact/deleteAction/index.js","view/contacts/contact/blockAction/block.view.js","view/contacts/contact/blockAction/block.controller.js","view/contacts/contact/blockAction/index.js","view/contacts/contact/contactAction.proxy.js","view/contacts/contact/contact.view.js","view/contacts/contact/contact.controller.js","view/contacts/contact/index.js","view/contacts/contacs.view.js","view/contacts/contacts.controller.js","view/contacts/index.js"],"names":["socket","socketClient","getSocket","openSocket","DEFAULT_CONFIG","server","close","text","errConn","es","en","getTokenIdError","useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","idioma","useRecoilValue","idiomaState","firebaseCurrentToken","firebaseCurrentTokenState","logout","useLogout","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","getAxiosRequest","idToken","axios","post","headers","then","resp","catch","err","response","console","log","firebase","auth","currentUser","getIdToken","NotificationHook","useRecoilState","notificationAtom","notificationState","setNotificationState","defaultToOpem","open","autoHideDuration","openSpecificNotification","severity","msg","openNotification","properties","openInfoNotification","openWarningNotification","location","origin","setLoginData","useSetRecoilState","loginData","setUserAvatar","userAvatarState","setSubscribe","subscribeToEventsState","setContactList","contactListState","setFriends","friendsAtom","client","useCallback","eraseConversationsWithContacts","emit","signOut","allowPermission","localStorage","removeItem","askNotificationPermission","callback","handlePermission","permission","Notification","window","requestPermission","e","checkNotificationPromise","permissionType","denyPermission","setItem","allowedNotifications","getItem","ListItemAvatar","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","ListItemSecondaryAction","muiName","position","right","top","transform","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","fillRule","d","AcceptInvActionView","onClick","MenuItem","ListItemIcon","fontSize","color","ListItemText","primary","acceptInv","AcceptInvActionController","preAction","contact","userData","friendDispatcher","friendSelector","acceptedUserId","contactId","token","action","payload","friend","data","socketId","accepterId","userId","socketIdRequester","errorAccepting","AcceptInv","DeclineInvActionView","decline","DeclineInvActionController","declinedUserId","status","friendId","declinerId","declinedId","socketIdDeclined","errorDeclining","DeclineInv","DeleteActionView","delete","DeleteActionController","deletedUserId","onDeleteError","friendShipStatus","deleterId","socketIdDeleted","DeleteAction","BlockActionView","block","BlockActionController","blokedUserId","onBlockError","blokerId","socketIdBloked","BlockAction","ContactActionProxy","handleClose","useStyle","makeStyles","theme","infoIcon","marginRight","overflow","textAlign","flex","padding","transition","borderRadius","border","cursor","margin","display","outline","userSelect","verticalAlign","justifyContent","textDecoration","listItemText","paddingRight","spacing","primaryText","palette","secondaryText","secondary","avatarMan","getContrastText","blue","backgroundColor","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","left","width","height","animation","content","opacity","Badge","OfflineStyledBadge","grey","OnlineBadge","overlap","anchorOrigin","vertical","horizontal","variant","children","StyledMenu","paper","Menu","elevation","getContentAnchorEl","transformOrigin","useCustomTooltipGreenStyle","arrow","green","tooltip","useCustomTooltipRedStyle","red","CustomTooltip","classesRed","classesGreen","Tooltip","ContactView","memo","handleMenu","anchorEl","openChat","lastMsg","options","locale","lastMsgTime","datetime","formatRelative","Date","avatarUrl","avatarGender","gender","ListItem","button","unread","badgeContent","Avatar","src","nickname","friendShipStatusCode","slice","secondaryTypographyProps","style","title","id","IconButton","edge","aria-label","keepMounted","Boolean","onClose","Divider","component","ContactContrller","useState","setAnchorEl","setActiveChat","activeChatWith","event","currentTarget","notifyTo","Contact","useStyles","scroll","flexGrow","flexDirection","overflowY","offsetDown","mixins","toolbar","bottom","ContactsView","contacts","List","length","map","key","Typography","align","goMakeFriends","beta","ContactsController","dark","darkModeAtom","setSubscribeToEvents","setUserAvatarState","setTourState","tourAtom","setIdiomaState","useEffect","userDataPromise","language","friendsPromise","friendsDataPromise","Promise","all","userResp","friendsResp","friendsDataResp","friends","dataObj","contactsData","user","_id","firstName","lastName","email","OS_Notification","loadData","isDark","to","Contacts"],"mappings":"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","file":"static/js/9.8dcd1a6d.chunk.js","sourcesContent":["import openSocket from 'socket.io-client'; \r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\nlet socket;\r\n\r\nconst socketClient = \r\n {   \r\n    getSocket: () => {\r\n        if(!socket){\r\n            socket = openSocket(DEFAULT_CONFIG.server);\r\n            return socket;    \r\n        }\r\n        return socket;\r\n    },\r\n    close: () => {\r\n        socket.close();\r\n    }\r\n};\r\n\r\nexport default socketClient;","//import React from 'react';\r\nimport axios from 'axios';\r\nimport {useRecoilValue} from 'recoil';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\nimport {idiomaState, firebaseCurrentTokenState} from '../components/recoil/atoms';\r\nimport firebase from './firebase';\r\nimport useLogout from './useLogout';\r\n\r\nconst text = {\r\n    errConn: {\r\n        es: \"Error de conexión\",\r\n        en: \"Network error\"\r\n    },\r\n    getTokenIdError: {\r\n        es: \"Su sesión ha expirado\",\r\n        en: \"Expired session\"\r\n    }\r\n}\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const firebaseCurrentToken = useRecoilValue(firebaseCurrentTokenState);\r\n    const logout = useLogout();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const getAxiosRequest = idToken => axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n            bodyParams, \r\n            {\r\n                headers: {\r\n                    'Authorization': idToken\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                if(doFnAfterSuccess) doFnAfterSuccess(resp, idToken);\r\n                return resp;\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    openErrorNotification(text.errConn[idioma]);                       \r\n                }else if(messageOnError) openErrorNotification(messageOnError);\r\n\r\n                if(doFnAfterError) doFnAfterError(err);\r\n                return err;\r\n            })\r\n    \r\n\r\n        if(firebaseCurrentToken){\r\n            return getAxiosRequest(firebaseCurrentToken)\r\n                .catch(err => {\r\n                    console.log('Error al realizar la peticion con el token guardado en recoil state, asi que intentamos usando firebase');\r\n                    return firebase.auth().currentUser.getIdToken(true)\r\n                        .then(idToken => {\r\n                            return getAxiosRequest(idToken);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log('Error al realizar la peticion con el token proveniente de firebase');\r\n                            logout();\r\n                            return err;\r\n                        });\r\n                })\r\n        }\r\n    };   \r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import React from 'react';\r\nimport {useRecoilState} from 'recoil'\r\nimport {notificationAtom} from './notification.atom';\r\n\r\n\r\nconst NotificationHook = () => {\r\n    \r\n    const [notificationState, setNotificationState] = useRecoilState(notificationAtom);\r\n\r\n    const defaultToOpem = {\r\n        ...notificationState,\r\n        open: true,\r\n        autoHideDuration: 3000\r\n    };\r\n\r\n    const openNotification = properties => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            ...properties\r\n        });\r\n    }\r\n\r\n    const openSpecificNotification = (severity, msg) => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            severity: severity,\r\n            msg: msg\r\n        });\r\n    }\r\n\r\n    const openSuccessNotification = msg => {\r\n        openSpecificNotification(\"success\",msg);\r\n    }\r\n\r\n    const openWarningNotification = msg => {\r\n        openSpecificNotification(\"warning\",msg);\r\n    }\r\n\r\n    const openErrorNotification = msg => {\r\n        openSpecificNotification(\"error\",msg);\r\n    }\r\n\r\n    const openInfoNotification = msg => {\r\n        openSpecificNotification(\"info\",msg);\r\n    }\r\n\r\n    return {    \r\n        openNotification: openNotification,\r\n        openSuccessNotification: openSuccessNotification,\r\n        openErrorNotification: openErrorNotification,\r\n        openInfoNotification: openInfoNotification,\r\n        openWarningNotification: openWarningNotification\r\n    };\r\n\r\n}\r\nexport default NotificationHook;","const DEV = {\r\n    server: \"http://localhost:3001\"\r\n}\r\nconst PROD = {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    server: location.origin //\"https://shut-app-back.herokuapp.com\"\r\n}\r\n\r\nexport const DEFAULT_CONFIG = process.env.NODE_ENV === \"development\" ? DEV : PROD;","import {useSetRecoilState} from 'recoil';\r\nimport {loginData, userAvatarState, subscribeToEventsState, contactListState, friendsAtom, eraseConversationsWithContacts} from '../components/recoil/atoms';\r\nimport { useCallback } from 'react';\r\nimport socketClient from './socket';\r\nimport firebase from './firebase';\r\n\r\nconst useLogout = () => {\r\n\r\n    const setLoginData = useSetRecoilState(loginData);\r\n    const setUserAvatar = useSetRecoilState(userAvatarState);\r\n    const setSubscribe = useSetRecoilState(subscribeToEventsState);\r\n    const setContactList = useSetRecoilState(contactListState);\r\n    const setFriends = useSetRecoilState(friendsAtom);\r\n    const client = socketClient.getSocket();\r\n\r\n    return useCallback(() => {\r\n        eraseConversationsWithContacts();\r\n        setUserAvatar(null);\r\n        setContactList([]);\r\n        setFriends([]);\r\n        client.emit('logout', {});\r\n        \r\n        setSubscribe(false);\r\n        setLoginData(null);\r\n        firebase.auth().signOut();\r\n        \r\n    }, []);\r\n}\r\nexport default useLogout;","const askNotificationPermission = callback => {\r\n    allowPermission();\r\n    const checkNotificationPromise = () => {\r\n        try { Notification.requestPermission().then(); } \r\n        catch(e) { return false;}\r\n        return true;\r\n    }\r\n\r\n    // function to actually ask the permissions\r\n    const handlePermission = permission => {\r\n        // Whatever the user answers, we make sure Chrome stores the information\r\n        if(!('permission' in Notification)) {\r\n            Notification.permission = permission;\r\n        }\r\n        if(callback) callback();\r\n    }\r\n\r\n    // Let's check if the browser supports notifications\r\n    if (!('Notification' in window)) {\r\n        console.log(\"This browser does not support notifications.\");\r\n    } else {\r\n        if(checkNotificationPromise()) {\r\n            Notification.requestPermission()\r\n                .then((permission) => {\r\n                    handlePermission(permission);\r\n                 })\r\n        } else {\r\n            Notification.requestPermission(function(permission) {\r\n                handlePermission(permission);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst denyPermission = () => {\r\n    localStorage.setItem('denyOSNotification', true);\r\n}\r\nconst allowPermission = () => {\r\n    localStorage.removeItem('denyOSNotification');\r\n}\r\n\r\nconst allowedNotifications = () => {\r\n    return Notification.permission === 'granted' && !localStorage.getItem('denyOSNotification');\r\n}\r\nconst permissionType = () => {\r\n\r\n    return Notification.permission;\r\n}\r\n\r\nexport default {askNotificationPermission, permissionType, denyPermission, allowedNotifications};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"g\", {\n  fillRule: \"evenodd\"\n}, _react.default.createElement(\"path\", {\n  d: \"M9 17l3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4M15.47 20.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n})), 'HowToReg');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 4h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2V4zM2.17 11.12c-.11.25-.17.52-.17.8V13c0 1.1.9 2 2 2h5.5l-.92 4.65c-.05.22-.02.46.08.66.23.45.52.86.88 1.22L10 22l6.41-6.41c.38-.38.59-.89.59-1.42V6.34C17 5.05 15.95 4 14.66 4h-8.1c-.71 0-1.36.37-1.72.97l-2.67 6.15z\"\n}), 'ThumbDownAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.99 9.18c0-.06.01-.12.01-.18 0-2.21-1.79-4-4-4-.06 0-.12.01-.18.01l4.17 4.17zm-6.1-3.56L4.27 3 3 4.27l2.62 2.62C5.23 7.5 5 8.22 5 9c0 2.21 1.79 4 4 4 .78 0 1.5-.23 2.11-.62L19.73 21 21 19.73l-8.62-8.62-5.49-5.49zM9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z\"\n}), 'VoiceOverOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst AcceptInvActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <HowToRegIcon fontSize=\"small\" color=\"primary\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.acceptInv[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default AcceptInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, updateFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\n\r\n\r\nimport AcceptInvActionView from './acceptinv.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\n\r\nconst AcceptInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const switchContact = useSetRecoilState(updateFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n\r\n        postRequest({\r\n            url: '/users/acceptFriendRequest',\r\n            bodyParams: {\r\n                acceptedUserId: contact.contactId\r\n            },\r\n            doFnAfterSuccess: (resp, token) => {\r\n                friendDispatcher({action: 'update', payload: {friend: {...resp.data.friend, socketId: contact.socketId}}});\r\n                const client = socketClient.getSocket();\r\n                \r\n                client.emit('accept friendship', {\r\n                    accepterId: userData.userId,\r\n                    socketIdRequester: contact.socketId,\r\n                    token: token\r\n                });\r\n            },\r\n            messageOnError: text.errorAccepting[idioma]\r\n        });\r\n        \r\n    }\r\n\r\n    return <AcceptInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default AcceptInvActionController;","import React from 'react';\r\nimport AcceptInvController from './acceptInv.controller';\r\nconst AcceptInv = props => {\r\n\r\n    return <AcceptInvController {...props}/>;\r\n\r\n}\r\nexport default AcceptInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\n\r\nconst DeclineInvActionView = ({idioma, text, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <ThumbDownAltIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.decline[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeclineInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport { friendSelector } from '../../../../components/recoil/selectors';\r\nimport socketClient from '../../../../utils/socket';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport text from './idioma.json'\r\nimport DeclineInvActionView from './declineinv.view';\r\n\r\n\r\nconst DeclineInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    //const eliminarContacto = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n\r\n        postRequest({\r\n            url: '/users/declineFriendRequest',\r\n            bodyParams: {\r\n                declinedUserId: contact.contactId\r\n            },\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                    const socket = socketClient.getSocket();\r\n                    socket.emit('decline friendship', {\r\n                        declinerId: userData.userId,\r\n                        declinedId: contact.contactId,\r\n                        socketIdDeclined: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            },\r\n            messageOnError: text.errorDeclining[idioma]\r\n        });\r\n        \r\n    }\r\n\r\n    return <DeclineInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n        text={text}\r\n    />;\r\n\r\n}\r\nexport default DeclineInvActionController;","import React from 'react';\r\nimport DeclineInvController from './declineInv.controller';\r\nconst DeclineInv = props => {\r\n\r\n    return <DeclineInvController {...props}/>;\r\n\r\n}\r\nexport default DeclineInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst DeleteActionView = ({idioma, onClick, text}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <DeleteIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.delete[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeleteActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport DeleteActionView from './delete.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst DeleteActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteFriend = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n\r\n    const onClick = () => {\r\n\r\n        preAction();\r\n        postRequest({\r\n            url: '/users/deleteContact',\r\n            bodyParams: {deletedUserId: contact.contactId},\r\n            messageOnError: text.onDeleteError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n\r\n                    if(contact.friendShipStatus === 1){\r\n                        const client = socketClient.getSocket();\r\n                        client.emit('delete contact', {\r\n                            deleterId: userData.userId,\r\n                            socketIdDeleted: contact.socketId,\r\n                            token: token\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <DeleteActionView \r\n        idioma={idioma}\r\n        text={text}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default DeleteActionController;","import React from 'react';\r\nimport DeleteController from './delete.controller';\r\nconst DeleteAction = props => {\r\n\r\n    return <DeleteController {...props} />;\r\n\r\n}\r\nexport default DeleteAction;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport VoiceOverOffIcon from '@material-ui/icons/VoiceOverOff';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst BlockActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <VoiceOverOffIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.block[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default BlockActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport BlockActionView from './block.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst BlockActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteContact = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        \r\n        postRequest({\r\n            url: '/users/blockUser',\r\n            bodyParams: {blokedUserId: contact.contactId},\r\n            messageOnError: text.onBlockError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    //deleteContact(contact.contactId);\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                    const client = socketClient.getSocket();\r\n                    client.emit('block contact', {\r\n                        blokerId: userData.userId, \r\n                        socketIdBloked: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <BlockActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default BlockActionController;","import React from 'react';\r\nimport BlockController from './block.controller';\r\nconst BlockAction = props => {\r\n\r\n    return <BlockController {...props}/>;\r\n\r\n}\r\nexport default BlockAction;","import React from 'react';\r\n\r\nimport AcceptInv from './acceptInvAction';\r\nimport DeclineInv from './declineInvAction';\r\nimport DeleteFriend from './deleteAction';\r\nimport BlockContact from './blockAction';\r\n/*\r\n    1- ACEPTED -> Eliminar, Bloquear\r\n    2- REQUESTED -> Cancelar, Bloquear\r\n    3- ASKED -> Aceptar, Cancelar, bloquear\r\n    4- DECLINED -> Cancelar, Bloquear\r\n    5- Blocked -> Eliminar\r\n    6- Deleted -> Eliminar\r\n*/\r\n\r\nconst ContactActionProxy = ({handleClose, contact}) => {\r\n    \r\n\r\n    const preAction = () => {\r\n        handleClose()\r\n    }\r\n\r\n    \r\n    \r\n    switch(contact.friendShipStatus){\r\n        case 1: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n            );\r\n        case 2: return (\r\n            <>\r\n                <DeclineInv preAction={preAction} contact={contact}/>\r\n                <BlockContact preAction={preAction} contact={contact}/>\r\n            </>\r\n        ); \r\n        case 3: return (\r\n            <>\r\n                <AcceptInv  preAction={preAction} contact={contact}/>\r\n                <DeclineInv  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 4: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 5: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        case 6: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ContactActionProxy;","import React from 'react';\r\nimport formatRelative from 'date-fns/formatRelative';\r\nimport  es from 'date-fns/locale/es';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { red, green, blue, pink } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport text from './idioma.json';\r\n\r\nimport ActionProxy from './contactAction.proxy';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    infoIcon: {\r\n        marginRight: '-12px',\r\n        overflow: 'visible',\r\n        textAlign: 'center',\r\n        flex: '0 0 auto',\r\n        \r\n        color: 'rgba(0, 0, 0, 0.54)',\r\n        padding: '12px',\r\n        fontSize: '1.5rem',\r\n        transition: 'background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '50%',\r\n\r\n        \r\n        border: 0,\r\n        cursor: 'pointer',\r\n        margin: 0,\r\n        display: 'inline-flex',\r\n        outline: 0,\r\n        \r\n        position: 'relative',\r\n        alignItems: 'center',\r\n        userSelect: 'none',\r\n        \r\n        verticalAlign: 'middle',\r\n        \r\n        justifyContent: 'center',\r\n        textDecoration: 'none'\r\n    },\r\n    listItemText: {\r\n        paddingRight: theme.spacing(10)\r\n    },\r\n    primaryText: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    secondaryText: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n    avatarMan: {\r\n        color: theme.palette.getContrastText(blue[400]),\r\n        backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n        color: theme.palette.getContrastText(pink[300]),\r\n        backgroundColor: pink[300],\r\n    },\r\n}));\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n\r\n        \r\n        \r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\nconst useCustomTooltipGreenStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: green[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: green[500]\r\n    },\r\n  }));\r\n  const useCustomTooltipRedStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: red[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: red[500]\r\n    },\r\n  }));\r\nconst CustomTooltip = props => {\r\n    const classesRed = useCustomTooltipRedStyle();\r\n    const classesGreen = useCustomTooltipGreenStyle();\r\n\r\n    return <Tooltip arrow classes={props.color === 'red' ? classesRed : classesGreen} {...props} />;\r\n}\r\n\r\n\r\nconst ContactView = React.memo(\r\n    ({idioma, contact, handleMenu,\r\n    handleClose, anchorEl, openChat}) => {\r\n    const lastMsg = contact.lastMsg ? contact.lastMsg : '' ;\r\n    \r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const lastMsgTime = contact.datetime ? formatRelative(new Date(contact.datetime), new Date(), options) : '';\r\n    \r\n    \r\n    \r\n    const classes = useStyle();\r\n    //const avatarUrl = contact.avatarUrl ? `${DEFAULT_CONFIG.server}${contact.avatarUrl}` : null;\r\n    const avatarUrl = contact.avatarUrl ? contact.avatarUrl : null;\r\n\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n\r\n    return (<>\r\n        <ListItem button onClick={openChat}>\r\n            <ListItemAvatar>\r\n                <OnlineBadge contact={contact}>\r\n                    {contact.unread && contact.unread > 0 \r\n                    ? <Badge color=\"secondary\" badgeContent={contact.unread}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    </Badge>\r\n                    : <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    }\r\n                </OnlineBadge>\r\n            </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={contact.nickname}\r\n                    \r\n                    secondary={contact.friendShipStatus > 1 ? text[contact.friendShipStatusCode][idioma] : `${lastMsg.slice(0, 55)}... ${lastMsgTime}`}\r\n                    secondaryTypographyProps={contact.friendShipStatus > 3 \r\n                        ? {\r\n                            style: {color: `${red[500]}`}\r\n\r\n                        } \r\n                        : contact.friendShipStatus < 4 && contact.friendShipStatus > 1 ? {\r\n                            style: {color: `${green[500]}`}\r\n                        } : {}\r\n                    }\r\n                    className={classes.listItemText}\r\n                    classes={{\r\n                        primary: classes.primaryText,\r\n                        secondary: classes.secondaryText\r\n                    }}\r\n                />\r\n                \r\n                {contact.friendShipStatus > 1 ?\r\n                    <CustomTooltip title={text[`desc${contact.friendShipStatusCode}`][idioma]} color={contact.friendShipStatus > 3 ? 'red' : 'geen'}>\r\n                        <div className={classes.infoIcon}>\r\n                            <InfoIcon id=\"idIconInfoFriendStatus\" fontSize=\"small\" style={{color: contact.friendShipStatus > 3 ? red[500] : green[500]}}/>\r\n                        </div>\r\n                    </CustomTooltip>\r\n                : null }\r\n            \r\n            <ListItemSecondaryAction>\r\n                \r\n                \r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleMenu}>\r\n                    <MoreVertIcon id=\"idIconFriendActions\" fontSize=\"default\"/>\r\n                </IconButton>\r\n                <StyledMenu\r\n                    id=\"customized-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >   \r\n                    <ActionProxy handleClose={handleClose} contact={contact}/>\r\n                </StyledMenu>\r\n            </ListItemSecondaryAction>\r\n            \r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        </>\r\n    );\r\n})\r\n\r\n\r\nexport default ContactView;","import React, {useState, useCallback} from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, activeChatWith, loginData} from '../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../components/recoil/selectors';\r\nimport ContactView from './contact.view';\r\nimport socketClient from '../../../utils/socket';\r\nimport firebase from '../../../utils/firebase';\r\n\r\nconst ContactContrller = ({contact}) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const setActiveChat = useSetRecoilState(activeChatWith);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    \r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null);\r\n    },[]);\r\n\r\n    const openChat = () => {        \r\n        setActiveChat(contact.contactId);\r\n\r\n        // Poner el estado en leidos\r\n        friendDispatcher({\r\n            action: 'reset_cant_no_leidos',\r\n            payload: {\r\n                contactId: contact.contactId,\r\n            }\r\n        });\r\n        // Emit como leidos\r\n        const client = socketClient.getSocket();\r\n        firebase.auth().currentUser.getIdToken(true)\r\n            .then(token => {\r\n                client.emit('read messages', {\r\n                    userId: userData.userId,\r\n                    contactId: contact.contactId,\r\n                    notifyTo: contact.socketId,\r\n                    token: token\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }\r\n\r\n    return <ContactView \r\n        handleMenu={handleMenu}\r\n        handleClose={handleClose}\r\n        contact={contact}\r\n        anchorEl={anchorEl}\r\n        idioma={idioma}\r\n        openChat={openChat}\r\n    />;\r\n\r\n}\r\nexport default ContactContrller;","import React from 'react';\r\n\r\nimport ContactController from './contact.controller';\r\nconst Contact = props => {\r\n\r\n    return <ContactController \r\n        {...props}\r\n    />;\r\n\r\n}\r\nexport default Contact;","import React, { useCallback } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Contact from './contact';\r\nimport { Container } from '@material-ui/core';\r\nconst useStyles = makeStyles(theme => ({\r\n    scroll: {\r\n        position: 'relative',\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        height: `calc(100% - ${theme.spacing(8)}px)`\r\n    },\r\n    offsetDown: {\r\n        ...theme.mixins.toolbar, \r\n        bottom: 0,\r\n        position: 'relative'\r\n    }\r\n}));\r\n\r\n\r\nconst ContactsView = ({idioma, text, contacts}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.scroll}>\r\n            <List id='lista'>\r\n                {contacts.length > 0 \r\n                    ? contacts.map((contact) => <Contact contact={contact} key={contact.contactId}/>)\r\n                    : <div style={{margin: '2em'}}>\r\n                            <Divider/>\r\n                            <Typography variant=\"h5\" align='justify' color=\"textPrimary\">{text.goMakeFriends[idioma]}</Typography>\r\n                            <Divider/>\r\n                            <Typography variant=\"subtitle1\" align='justify' color=\"textPrimary\" style={{marginTop: '1em'}}>{text.beta[idioma]}</Typography>\r\n                        </div>\r\n                }\r\n            </List>\r\n            <div className={classes.offsetDown}/>\r\n            <div className={classes.offsetDown}/>\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ContactsView;","import React, { useEffect, useState, useCallback} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useRecoilState, useSetRecoilState, useRecoilValue} from 'recoil';\r\nimport {idiomaState, subscribeToEventsState, loginData, userAvatarState, /*newAvatarState,*/ darkModeAtom/*firebaseCurrentUserState, friendSelector, friendsAtom*/} from '../../components/recoil/atoms';\r\nimport {tourAtom} from '../tour/tour.atoms';\r\nimport {friendSelector} from '../../components/recoil/selectors';\r\nimport useAxiosHook from '../../utils/axiosHook';\r\nimport OS_Notification from '../../utils/OS_NotificationPermission';\r\nimport ContactsView from './contacs.view';\r\nimport text from './idioma.json';\r\n//import { Dialog } from '@material-ui/core';\r\n\r\n//const UpdateAvatarCmp = React.lazy(() => import('./updateAvatar'));\r\n//const AsyncChatCmp = React.lazy(() => import('../chat'));\r\n\r\nconst ContactsController = props => {\r\n\r\n    \r\n    const dark = useRecoilValue(darkModeAtom);\r\n    const setSubscribeToEvents = useSetRecoilState(subscribeToEventsState);\r\n    const [userData, setLoginData] = useRecoilState(loginData);\r\n    const setUserAvatarState = useSetRecoilState(userAvatarState);\r\n    //const setNewUserAvatarState = useSetRecoilState(newAvatarState);\r\n    //const chatWith = useRecoilValue(activeChatWith);\r\n    const setTourState = useSetRecoilState(tourAtom);\r\n    const {postRequest} = useAxiosHook();\r\n    \r\n    //const [contacts, addContact] = useRecoilState(friendSelector);\r\n    const [contacts, friendDispatcher] = useRecoilState(friendSelector);\r\n\r\n    const [idioma, setIdiomaState] = useRecoilState(idiomaState);\r\n\r\n    //const [openUpdateAvatar, setOpenUpdateAvatar] = useState(false);\r\n\r\n    /*const handleClose = useCallback(() => {\r\n        setOpenUpdateAvatar(false);\r\n    }, []);*/\r\n\r\n    const loadData = () => {\r\n        \r\n        const userDataPromise = postRequest({\r\n            url: '/users/getUserData',\r\n            bodyParams: {\r\n                language: idioma\r\n            }\r\n        });\r\n        const friendsPromise = postRequest({\r\n            url: '/users/searchFirends',\r\n            //messageOnError: text.errorLoadingFriends[idioma]\r\n        });\r\n        const friendsDataPromise = postRequest({\r\n            url: '/users/getContactData',\r\n            //messageOnError: text.errorLoadingFriendsData[idioma]\r\n        });\r\n\r\n        Promise.all([userDataPromise, friendsPromise, friendsDataPromise])\r\n            .then(([userResp, friendsResp, friendsDataResp]) => {\r\n\r\n                if(friendsResp.status === 200){\r\n                        \r\n                    friendDispatcher({\r\n                        action: 'initialize', \r\n                        payload: {\r\n                            friends: friendsResp.data.friends\r\n                        }});\r\n                    setSubscribeToEvents(true);\r\n                    \r\n                }\r\n\r\n                if(friendsDataResp.status === 200){\r\n                    friendDispatcher({\r\n                        action: 'set_message_info',\r\n                        payload: {\r\n                            dataObj: friendsDataResp.data.contactsData\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \r\n\r\n                if(userResp.status === 200 || userResp.status === 201){\r\n                    const {\r\n                        _id, nickname, firstName,\r\n                        lastName, email, gender, language, avatarUrl/*,avatarChanged, oauthAvatarUrl*/\r\n                    } = userResp.data.user;\r\n                    \r\n                    /*if(avatarChanged){\r\n                        // Lanzar promt de si quiere actualizar su avatar\r\n                        setOpenUpdateAvatar(true);\r\n                        setNewUserAvatarState(oauthAvatarUrl);\r\n                    }*/\r\n                    setLoginData({\r\n                        userId: _id, \r\n                        nickname: nickname,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        email: email,\r\n                        gender: gender\r\n                    });\r\n                    setIdiomaState(language);\r\n                    setUserAvatarState(avatarUrl);\r\n                }\r\n                if(userResp.status === 201){\r\n                    // Si es un usuario nuevo le doy un tour por la app\r\n                    OS_Notification.askNotificationPermission(() => setTourState(true));\r\n                }\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contacts.length === 0 && userData !== null)\r\n            loadData();        \r\n    }, []);\r\n\r\n    return userData !== null \r\n            ?  <>\r\n                <ContactsView \r\n                    idioma={idioma}\r\n                    contacts={contacts}\r\n                    text={text}\r\n                    isDark={dark}\r\n                /> \r\n            </>\r\n            : <Redirect to='/' />;\r\n\r\n}\r\n\r\nexport default ContactsController;","import React from 'react';\r\nimport ContactsController from './contacts.controller';\r\n\r\nconst Contacts = props => {\r\n    return <ContactsController />;\r\n\r\n}\r\nexport default Contacts;"],"sourceRoot":""}